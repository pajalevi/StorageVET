}
}
} else {
# output = read_csv(file = paste0(resultsfolder,"npv_runs78-85.csv"))
output = read_csv(file = paste0(resultsfolder,"npv_runs41-48.csv"))
}
dark2scale =c('#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e','#e6ab02','#a6761d','#666666',"#2f4f4f")
scale = (c("#2f4f4f","#8b4513","#228b22","#000080","#ff0000","#ffff00","#00ff00","#00ffff","#ff00ff","#eee8aa","#6495ed","#ff69b4"))
# runslog = read_csv(file = paste0(resultsfolder,"runsLog.csv"))
# output = merge(output, runslog[,c("runID","shortname", "description")], by = "runID")
output$ITC = output$`2MW-5hr Capital Cost` * 0.26
fivehbatt = output$shortname != "baseline1_4hbatt"
output$SGIP[fivehbatt] = 0#10000 * 250 * -1
output$SGIP[!fivehbatt] = 0#8000 * 250 * -1
output$unsub_total = output$total
output$total = output$unsub_total - output$ITC - output$SGIP #subsidies are negative so that they show up against capital cost
output$`2MW-5hr Capital Cost` = output$`2MW-5hr Capital Cost` - output$ITC - output$SGIP
View(kwyr_output)
ls()
rm(list=ls())
ls()
library(plyr)
library(tidyverse)
library(stringr)
resultsfolder = "/Applications/storagevet2v101/StorageVET-master-git/Results/"
if(T){
source("/Applications/storagevet2v101/StorageVET-master-git/combine_results.R")
# caiso_output = combine_results(runIDs = c(115:142), savecsv=F, plotTF=F) #41:48, 78:85, or 86:93,95:114. last two are with optimistic baseline, difference is daily cycle cap: second set doesnt have one. 115:142 is with no cycle limit and also FR_CombinedMarket=0
# # 115:142 is no cycle limit and combined market = 0
# caiso_output$iso = "caiso"
#
# # 150:177 are ercot data, combined market = 0
# ercot_output = combine_results(runIDs = c(150:177), savecsv=F, plotTF=F)
# ercot_output$iso = "ercot"
#
# # are nyiso date, combined market = 1
# nyiso_output = combine_results(runIDs = c(178:205), savecsv=F, plotTF=F)
# nyiso_output$iso = "nyiso"
#
# isone_output = combine_results(runIDs = c(206:233), savecsv=F, plotTF=F)
# isone_output$iso = "isone"
#
# pjm_output = combine_results(runIDs = c(234:261), savecsv=F, plotTF=F)
# pjm_output$iso = "pjm"
#
# output = rbind.fill(caiso_output, ercot_output, nyiso_output, isone_output, pjm_output)
isos = c("caiso","ercot","nyiso","isone","pjm")
iso_runIDs = list(c(115:142),c(150:177),c(178:205),c(206:233),c(234:261))
for(i in 1:length(isos)){
temp_output = combine_results(runIDs = iso_runIDs[[i]], savecsv=F, plotTF=F)
temp_output$iso = isos[i]
temp_kwyr = combine_kwyr_value(runIDs = iso_runIDs[[i]], savecsv=F)
temp_kwyr$iso = isos[i]
if(i==1){
output = temp_output
kwyr_output = temp_kwyr
} else {
output = rbind.fill(output, temp_output)
kwyr_output = rbind.fill(kwyr_output, temp_kwyr)
}
}
} else {
# output = read_csv(file = paste0(resultsfolder,"npv_runs78-85.csv"))
output = read_csv(file = paste0(resultsfolder,"npv_runs41-48.csv"))
}
traceback()
library(plyr)
library(tidyverse)
library(stringr)
resultsfolder = "/Applications/storagevet2v101/StorageVET-master-git/Results/"
if(T){
source("/Applications/storagevet2v101/StorageVET-master-git/combine_results.R")
# caiso_output = combine_results(runIDs = c(115:142), savecsv=F, plotTF=F) #41:48, 78:85, or 86:93,95:114. last two are with optimistic baseline, difference is daily cycle cap: second set doesnt have one. 115:142 is with no cycle limit and also FR_CombinedMarket=0
# # 115:142 is no cycle limit and combined market = 0
# caiso_output$iso = "caiso"
#
# # 150:177 are ercot data, combined market = 0
# ercot_output = combine_results(runIDs = c(150:177), savecsv=F, plotTF=F)
# ercot_output$iso = "ercot"
#
# # are nyiso date, combined market = 1
# nyiso_output = combine_results(runIDs = c(178:205), savecsv=F, plotTF=F)
# nyiso_output$iso = "nyiso"
#
# isone_output = combine_results(runIDs = c(206:233), savecsv=F, plotTF=F)
# isone_output$iso = "isone"
#
# pjm_output = combine_results(runIDs = c(234:261), savecsv=F, plotTF=F)
# pjm_output$iso = "pjm"
#
# output = rbind.fill(caiso_output, ercot_output, nyiso_output, isone_output, pjm_output)
isos = c("caiso","ercot","nyiso","isone","pjm")
iso_runIDs = list(c(115:142),c(150:177),c(178:205),c(206:233),c(234:261))
for(i in 1:length(isos)){
temp_output = combine_results(runIDs = iso_runIDs[[i]], savecsv=F, plotTF=F)
temp_output$iso = isos[i]
temp_kwyr = combine_kwyr_value(runIDs = iso_runIDs[[i]], savecsv=F)
temp_kwyr$iso = isos[i]
if(i==1){
output = temp_output
kwyr_output = temp_kwyr
} else {
output = rbind.fill(output, temp_output)
kwyr_output = rbind.fill(kwyr_output, temp_kwyr)
}
}
} else {
# output = read_csv(file = paste0(resultsfolder,"npv_runs78-85.csv"))
output = read_csv(file = paste0(resultsfolder,"npv_runs41-48.csv"))
}
traceback()
library(plyr)
library(tidyverse)
library(stringr)
resultsfolder = "/Applications/storagevet2v101/StorageVET-master-git/Results/"
if(T){
source("/Applications/storagevet2v101/StorageVET-master-git/combine_results.R")
# caiso_output = combine_results(runIDs = c(115:142), savecsv=F, plotTF=F) #41:48, 78:85, or 86:93,95:114. last two are with optimistic baseline, difference is daily cycle cap: second set doesnt have one. 115:142 is with no cycle limit and also FR_CombinedMarket=0
# # 115:142 is no cycle limit and combined market = 0
# caiso_output$iso = "caiso"
#
# # 150:177 are ercot data, combined market = 0
# ercot_output = combine_results(runIDs = c(150:177), savecsv=F, plotTF=F)
# ercot_output$iso = "ercot"
#
# # are nyiso date, combined market = 1
# nyiso_output = combine_results(runIDs = c(178:205), savecsv=F, plotTF=F)
# nyiso_output$iso = "nyiso"
#
# isone_output = combine_results(runIDs = c(206:233), savecsv=F, plotTF=F)
# isone_output$iso = "isone"
#
# pjm_output = combine_results(runIDs = c(234:261), savecsv=F, plotTF=F)
# pjm_output$iso = "pjm"
#
# output = rbind.fill(caiso_output, ercot_output, nyiso_output, isone_output, pjm_output)
isos = c("caiso","ercot","nyiso","isone","pjm")
iso_runIDs = list(c(115:142),c(150:177),c(178:205),c(206:233),c(234:261))
for(i in 1:length(isos)){
temp_output = combine_results(runIDs = iso_runIDs[[i]], savecsv=F, plotTF=F)
temp_output$iso = isos[i]
temp_kwyr = combine_kwyr_value(runIDs = iso_runIDs[[i]], savecsv=F)
temp_kwyr$iso = isos[i]
if(i==1){
output = temp_output
kwyr_output = temp_kwyr
} else {
output = rbind.fill(output, temp_output)
kwyr_output = rbind.fill(kwyr_output, temp_kwyr)
}
}
} else {
# output = read_csv(file = paste0(resultsfolder,"npv_runs78-85.csv"))
output = read_csv(file = paste0(resultsfolder,"npv_runs41-48.csv"))
}
library(plyr)
library(tidyverse)
library(stringr)
resultsfolder = "/Applications/storagevet2v101/StorageVET-master-git/Results/"
if(T){
source("/Applications/storagevet2v101/StorageVET-master-git/combine_results.R")
# caiso_output = combine_results(runIDs = c(115:142), savecsv=F, plotTF=F) #41:48, 78:85, or 86:93,95:114. last two are with optimistic baseline, difference is daily cycle cap: second set doesnt have one. 115:142 is with no cycle limit and also FR_CombinedMarket=0
# # 115:142 is no cycle limit and combined market = 0
# caiso_output$iso = "caiso"
#
# # 150:177 are ercot data, combined market = 0
# ercot_output = combine_results(runIDs = c(150:177), savecsv=F, plotTF=F)
# ercot_output$iso = "ercot"
#
# # are nyiso date, combined market = 1
# nyiso_output = combine_results(runIDs = c(178:205), savecsv=F, plotTF=F)
# nyiso_output$iso = "nyiso"
#
# isone_output = combine_results(runIDs = c(206:233), savecsv=F, plotTF=F)
# isone_output$iso = "isone"
#
# pjm_output = combine_results(runIDs = c(234:261), savecsv=F, plotTF=F)
# pjm_output$iso = "pjm"
#
# output = rbind.fill(caiso_output, ercot_output, nyiso_output, isone_output, pjm_output)
isos = c("caiso","ercot","nyiso","isone","pjm")
iso_runIDs = list(c(115:142),c(150:177),c(178:205),c(206:233),c(234:261))
for(i in 1:length(isos)){
temp_output = combine_results(runIDs = iso_runIDs[[i]], savecsv=F, plotTF=F)
temp_output$iso = isos[i]
temp_kwyr = combine_kwyr_value(runIDs = iso_runIDs[[i]], savecsv=F)
temp_kwyr$iso = isos[i]
if(i==1){
output = temp_output
kwyr_output = temp_kwyr
} else {
output = rbind.fill(output, temp_output)
kwyr_output = rbind.fill(kwyr_output, temp_kwyr)
}
}
} else {
# output = read_csv(file = paste0(resultsfolder,"npv_runs78-85.csv"))
output = read_csv(file = paste0(resultsfolder,"npv_runs41-48.csv"))
}
traceback()
isos = c("caiso","ercot","nyiso","isone","pjm")
iso_runIDs = list(c(115:142),c(150:177),c(178:205),c(206:233),c(234:261))
i=1
library(plyr)
library(tidyverse)
library(stringr)
resultsfolder = "/Applications/storagevet2v101/StorageVET-master-git/Results/"
if(T){
source("/Applications/storagevet2v101/StorageVET-master-git/combine_results.R")
# caiso_output = combine_results(runIDs = c(115:142), savecsv=F, plotTF=F) #41:48, 78:85, or 86:93,95:114. last two are with optimistic baseline, difference is daily cycle cap: second set doesnt have one. 115:142 is with no cycle limit and also FR_CombinedMarket=0
# # 115:142 is no cycle limit and combined market = 0
# caiso_output$iso = "caiso"
#
# # 150:177 are ercot data, combined market = 0
# ercot_output = combine_results(runIDs = c(150:177), savecsv=F, plotTF=F)
# ercot_output$iso = "ercot"
#
# # are nyiso date, combined market = 1
# nyiso_output = combine_results(runIDs = c(178:205), savecsv=F, plotTF=F)
# nyiso_output$iso = "nyiso"
#
# isone_output = combine_results(runIDs = c(206:233), savecsv=F, plotTF=F)
# isone_output$iso = "isone"
#
# pjm_output = combine_results(runIDs = c(234:261), savecsv=F, plotTF=F)
# pjm_output$iso = "pjm"
#
# output = rbind.fill(caiso_output, ercot_output, nyiso_output, isone_output, pjm_output)
isos = c("caiso","ercot","nyiso","isone","pjm")
iso_runIDs = list(c(115:142),c(150:177),c(178:205),c(206:233),c(234:261))
for(i in 1:length(isos)){
temp_output = combine_results(runIDs = iso_runIDs[[i]], savecsv=F, plotTF=F)
temp_output$iso = isos[i]
temp_kwyr = combine_kwyr_value(runIDs = iso_runIDs[[i]], savecsv=F)
temp_kwyr$iso = isos[i]
if(i==1){
output = temp_output
kwyr_output = temp_kwyr
} else {
output = rbind.fill(output, temp_output)
kwyr_output = rbind.fill(kwyr_output, temp_kwyr)
}
}
} else {
# output = read_csv(file = paste0(resultsfolder,"npv_runs78-85.csv"))
output = read_csv(file = paste0(resultsfolder,"npv_runs41-48.csv"))
}
dark2scale =c('#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e','#e6ab02','#a6761d','#666666',"#2f4f4f")
scale = (c("#2f4f4f","#8b4513","#228b22","#000080","#ff0000","#ffff00","#00ff00","#00ffff","#ff00ff","#eee8aa","#6495ed","#ff69b4"))
# runslog = read_csv(file = paste0(resultsfolder,"runsLog.csv"))
# output = merge(output, runslog[,c("runID","shortname", "description")], by = "runID")
output$ITC = output$`2MW-5hr Capital Cost` * 0.26
fivehbatt = output$shortname != "baseline1_4hbatt"
output$SGIP[fivehbatt] = 0#10000 * 250 * -1
output$SGIP[!fivehbatt] = 0#8000 * 250 * -1
output$unsub_total = output$total
output$total = output$unsub_total - output$ITC - output$SGIP #subsidies are negative so that they show up against capital cost
output$`2MW-5hr Capital Cost` = output$`2MW-5hr Capital Cost` - output$ITC - output$SGIP
View(kwyr_output)
library(plyr)
library(tidyverse)
library(stringr)
resultsfolder = "/Applications/storagevet2v101/StorageVET-master-git/Results/"
if(T){
source("/Applications/storagevet2v101/StorageVET-master-git/combine_results.R")
# caiso_output = combine_results(runIDs = c(115:142), savecsv=F, plotTF=F) #41:48, 78:85, or 86:93,95:114. last two are with optimistic baseline, difference is daily cycle cap: second set doesnt have one. 115:142 is with no cycle limit and also FR_CombinedMarket=0
# # 115:142 is no cycle limit and combined market = 0
# caiso_output$iso = "caiso"
#
# # 150:177 are ercot data, combined market = 0
# ercot_output = combine_results(runIDs = c(150:177), savecsv=F, plotTF=F)
# ercot_output$iso = "ercot"
#
# # are nyiso date, combined market = 1
# nyiso_output = combine_results(runIDs = c(178:205), savecsv=F, plotTF=F)
# nyiso_output$iso = "nyiso"
#
# isone_output = combine_results(runIDs = c(206:233), savecsv=F, plotTF=F)
# isone_output$iso = "isone"
#
# pjm_output = combine_results(runIDs = c(234:261), savecsv=F, plotTF=F)
# pjm_output$iso = "pjm"
#
# output = rbind.fill(caiso_output, ercot_output, nyiso_output, isone_output, pjm_output)
isos = c("caiso","ercot","nyiso","isone","pjm")
iso_runIDs = list(c(115:142),c(150:177),c(178:205),c(206:233),c(234:261))
for(i in 1:length(isos)){
temp_output = combine_results(runIDs = iso_runIDs[[i]], savecsv=F, plotTF=F)
temp_output$iso = isos[i]
temp_kwyr = combine_kwyr_value(runIDs = iso_runIDs[[i]], savecsv=F)
temp_kwyr$iso = isos[i]
if(i==1){
output = temp_output
kwyr_output = temp_kwyr
} else {
output = rbind.fill(output, temp_output)
kwyr_output = rbind.fill(kwyr_output, temp_kwyr)
}
}
} else {
# output = read_csv(file = paste0(resultsfolder,"npv_runs78-85.csv"))
output = read_csv(file = paste0(resultsfolder,"npv_runs41-48.csv"))
}
library(plyr)
library(tidyverse)
library(stringr)
resultsfolder = "/Applications/storagevet2v101/StorageVET-master-git/Results/"
if(T){
source("/Applications/storagevet2v101/StorageVET-master-git/combine_results.R")
# caiso_output = combine_results(runIDs = c(115:142), savecsv=F, plotTF=F) #41:48, 78:85, or 86:93,95:114. last two are with optimistic baseline, difference is daily cycle cap: second set doesnt have one. 115:142 is with no cycle limit and also FR_CombinedMarket=0
# # 115:142 is no cycle limit and combined market = 0
# caiso_output$iso = "caiso"
#
# # 150:177 are ercot data, combined market = 0
# ercot_output = combine_results(runIDs = c(150:177), savecsv=F, plotTF=F)
# ercot_output$iso = "ercot"
#
# # are nyiso date, combined market = 1
# nyiso_output = combine_results(runIDs = c(178:205), savecsv=F, plotTF=F)
# nyiso_output$iso = "nyiso"
#
# isone_output = combine_results(runIDs = c(206:233), savecsv=F, plotTF=F)
# isone_output$iso = "isone"
#
# pjm_output = combine_results(runIDs = c(234:261), savecsv=F, plotTF=F)
# pjm_output$iso = "pjm"
#
# output = rbind.fill(caiso_output, ercot_output, nyiso_output, isone_output, pjm_output)
isos = c("caiso","ercot","nyiso","isone","pjm")
iso_runIDs = list(c(115:142),c(150:177),c(178:205),c(206:233),c(234:261))
for(i in 1:length(isos)){
temp_output = combine_results(runIDs = iso_runIDs[[i]], savecsv=F, plotTF=F)
temp_output$iso = isos[i]
temp_kwyr = combine_kwyr_value(runIDs = iso_runIDs[[i]], savecsv=F)
temp_kwyr$iso = isos[i]
if(i==1){
output = temp_output
kwyr_output = temp_kwyr
} else {
output = rbind.fill(output, temp_output)
kwyr_output = rbind.fill(kwyr_output, temp_kwyr)
}
}
} else {
# output = read_csv(file = paste0(resultsfolder,"npv_runs78-85.csv"))
output = read_csv(file = paste0(resultsfolder,"npv_runs41-48.csv"))
}
dark2scale =c('#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e','#e6ab02','#a6761d','#666666',"#2f4f4f")
scale = (c("#2f4f4f","#8b4513","#228b22","#000080","#ff0000","#ffff00","#00ff00","#00ffff","#ff00ff","#eee8aa","#6495ed","#ff69b4"))
# runslog = read_csv(file = paste0(resultsfolder,"runsLog.csv"))
# output = merge(output, runslog[,c("runID","shortname", "description")], by = "runID")
output$ITC = output$`2MW-5hr Capital Cost` * 0.26
fivehbatt = output$shortname != "baseline1_4hbatt"
output$SGIP[fivehbatt] = 0#10000 * 250 * -1
output$SGIP[!fivehbatt] = 0#8000 * 250 * -1
output$unsub_total = output$total
output$total = output$unsub_total - output$ITC - output$SGIP #subsidies are negative so that they show up against capital cost
output$`2MW-5hr Capital Cost` = output$`2MW-5hr Capital Cost` - output$ITC - output$SGIP
View(kwyr_output)
tall_kwyr_output = pivot_longer(kwyr_output, cols = c(-runID,-total,-outputfol,-shortname,-description,-unsub_total, -iso),names_to = "value_type", values_to = "value")
tall_kwyr_output = pivot_longer(kwyr_output, cols = c(-runID,-shortname,-description, -iso),names_to = "value_type", values_to = "value")
# kwyr_output$Num_RA_Events = (str_remove_all(str_sub(kwyr_output$outputfol,-7,-5),"[^0-9]")) # removes all nonnumeric characters
ggplot(tall_kwyr_output,aes(x=Num_RA_Events, y = value)) +
# geom_col() +
facet_wrap(~iso)+
geom_point(aes(color = value_type))+
theme_minimal() +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(y = "$/kW-year", x="Number of days with RA events")
kwyr_output$Num_RA_Events = NA
for(i in 1:nrow(kwyr_output)){
# ID which run was used to generate constraints for this run
input_runID = as.numeric(substr(str_split(kwyr_output$outputfol[i],"_")[[1]][3],6,100))
input_run_sel = which(output$runID == input_runID)
# ID num RA events for that run
numevents = str_remove_all(str_split(output$outputfol[input_run_sel],"_")[[1]][5],"[^0-9]")
# fill in
kwyr_output$Num_RA_Events[i] = as.numeric(numevents)
}
kwyr_output$Num_RA_Events = NA
for(i in 1:nrow(kwyr_output)){
# ID which run was used to generate constraints for this run
input_runID = as.numeric(substr(str_split(kwyr_output$outputfol[i],"_")[[1]][3],6,100))
input_run_sel = which(kwyr_output$runID == input_runID)
# ID num RA events for that run
numevents = str_remove_all(str_split(kwyr_output$outputfol[input_run_sel],"_")[[1]][5],"[^0-9]")
# fill in
kwyr_output$Num_RA_Events[i] = as.numeric(numevents)
}
kwyr_output$Num_RA_Events = NA
for(i in 1:nrow(kwyr_output)){
# ID which run was used to generate constraints for this run
input_runID = as.numeric(substr(str_split(kwyr_output$shortname[i],"_")[[1]][1],6,100))
input_run_sel = which(kwyr_output$runID == input_runID)
# ID num RA events for that run
numevents = str_remove_all(str_split(kwyr_output$shortname[input_run_sel],"_")[[1]][3],"[^0-9]")
# fill in
kwyr_output$Num_RA_Events[i] = as.numeric(numevents)
}
i=1
input_runID = as.numeric(substr(str_split(kwyr_output$shortname[i],"_")[[1]][1],6,100))
input_run_sel = which(kwyr_output$runID == input_runID)
input_runID
str_split(kwyr_output$shortname[i],"_")
str_split(kwyr_output$shortname[i],"_")[[1]]
str_split(kwyr_output$shortname[i],"_")[[1]][3]
numeric(substr(str_split(kwyr_output$shortname[i],"_")[[1]][3],6,100))
kwyr_constrained = kwyr_output[str_detect(kwyr_output$shortname,"constraint"),]
kwyr_constrained$Num_RA_Events = NA
for(i in 1:nrow(kwyr_constrained)){
# ID which run was used to generate constraints for this run
input_runID = as.numeric(substr(str_split(kwyr_constrained$shortname[i],"_")[[1]][3],6,100))
input_run_sel = which(kwyr_constrained$runID == input_runID)
# ID num RA events for that run
numevents = str_remove_all(str_split(kwyr_constrained$shortname[input_run_sel],"_")[[1]][3],"[^0-9]")
# fill in
kwyr_constrained$Num_RA_Events[i] = as.numeric(numevents)
}
str_split(kwyr_constrained$shortname[i],"_")[[1]]
str_split(kwyr_constrained$shortname[i],"_")[[1]][1]
as.numeric(substr(str_split(kwyr_constrained$shortname[i],"_")[[1]][1],6,100))
which(kwyr_constrained$runID == input_runID)
which(kwyr_output$runID == input_runID)
# ID which run was used to generate constraints for this run
input_runID = as.numeric(substr(str_split(kwyr_constrained$shortname[i],"_")[[1]][1],6,100))
input_run_sel = which(kwyr_output$runID == input_runID)
which(kwyr_output$runID == input_runID)
# ID num RA events for that run
numevents = str_remove_all(str_split(kwyr_output$shortname[input_run_sel],"_")[[1]][3],"[^0-9]")
numevents
# fill in
kwyr_constrained$Num_RA_Events[i] = as.numeric(numevents)
kwyr_constrained = kwyr_output[str_detect(kwyr_output$shortname,"constraint"),]
kwyr_constrained$Num_RA_Events = NA
for(i in 1:nrow(kwyr_constrained)){
# ID which run was used to generate constraints for this run
input_runID = as.numeric(substr(str_split(kwyr_constrained$shortname[i],"_")[[1]][1],6,100))
input_run_sel = which(kwyr_output$runID == input_runID)
# ID num RA events for that run
numevents = str_remove_all(str_split(kwyr_output$shortname[input_run_sel],"_")[[1]][3],"[^0-9]")
# fill in
kwyr_constrained$Num_RA_Events[i] = as.numeric(numevents)
}
tall_kwyr_output = pivot_longer(kwyr_constrained, cols = c(-runID,-shortname,-description, -iso),names_to = "value_type", values_to = "value")
# kwyr_output$Num_RA_Events = (str_remove_all(str_sub(kwyr_output$outputfol,-7,-5),"[^0-9]")) # removes all nonnumeric characters
ggplot(tall_kwyr_output,aes(x=Num_RA_Events, y = value)) +
# geom_col() +
facet_wrap(~iso)+
geom_point(aes(color = value_type))+
theme_minimal() +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(y = "$/kW-year", x="Number of days with RA events")
tall_kwyr_output = pivot_longer(kwyr_constrained, cols = c(-runID,-shortname,-description, -iso, -Num_RA_Events),names_to = "value_type", values_to = "value")
# kwyr_output$Num_RA_Events = (str_remove_all(str_sub(kwyr_output$outputfol,-7,-5),"[^0-9]")) # removes all nonnumeric characters
ggplot(tall_kwyr_output,aes(x=Num_RA_Events, y = value)) +
# geom_col() +
facet_wrap(~iso)+
geom_point(aes(color = value_type))+
theme_minimal() +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(y = "$/kW-year", x="Number of days with RA events")
# kwyr_output$Num_RA_Events = (str_remove_all(str_sub(kwyr_output$outputfol,-7,-5),"[^0-9]")) # removes all nonnumeric characters
ggplot(filter(tall_kwyr_output,value>0),aes(x=Num_RA_Events, y = value)) +
# geom_col() +
facet_wrap(~iso)+
geom_point(aes(color = value_type))+
theme_minimal() +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(y = "$/kW-year", x="Number of days with RA events")
# kwyr_output$Num_RA_Events = (str_remove_all(str_sub(kwyr_output$outputfol,-7,-5),"[^0-9]")) # removes all nonnumeric characters
ggplot(filter(tall_kwyr_output,value>0, value_type != "Yearly Net Value"),aes(x=Num_RA_Events, y = value)) +
# geom_col() +
facet_wrap(~iso)+
geom_point(aes(color = value_type))+
theme_minimal() +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
labs(y = "$/kW-year", x="Number of days with RA events")
ggplot(filter(tall_kwyr_output,value>0, value_type != "Yearly Net Value", Num_RA_Events == "0"), aes(x=value_type,y=value)) +
facet_wrap(~iso) +
geom_bar()
ggplot(filter(tall_kwyr_output,value>0, value_type != "Yearly Net Value", Num_RA_Events == "0"), aes(x=value_type,y=value)) +
facet_wrap(~iso) +
geom_bar(stat = "identity")
ggplot(filter(tall_kwyr_output,value>0, value_type != "Yearly Net Value", Num_RA_Events == "0"), aes(x=value_type,y=value)) +
facet_wrap(~iso) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(filter(tall_kwyr_output,value>0, value_type != "Yearly Net Value", Num_RA_Events == "0"), aes(y=value)) +
facet_wrap(~value_type) +
geom_bar(stat = "identity", aes(x=iso)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(filter(tall_kwyr_output,value_type != "Yearly Net Value", Num_RA_Events == "0"), aes(y=value)) +
facet_wrap(~value_type) +
geom_bar(stat = "identity", aes(x=iso)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(filter(tall_kwyr_output,!str_detect(value_type, "Cost"),value_type != "Yearly Net Value", Num_RA_Events == "0"), aes(y=value)) +
facet_wrap(~value_type) +
geom_bar(stat = "identity", aes(x=iso)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(filter(tall_kwyr_output,!str_detect(value_type, "Cost"),value_type != "Yearly Net Value", value_type != "X1",Num_RA_Events == "0"), aes(y=value)) +
facet_wrap(~value_type) +
geom_bar(stat = "identity", aes(x=iso)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(filter(tall_kwyr_output,!str_detect(value_type, "Cost"),value_type != "Yearly Net Value", value != "0",Num_RA_Events == "0"), aes(y=value)) +
facet_wrap(~value_type) +
geom_bar(stat = "identity", aes(x=iso)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
